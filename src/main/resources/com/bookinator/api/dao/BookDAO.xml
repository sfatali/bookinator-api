<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
        'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>
<mapper namespace="com.bookinator.api.dao.BookDAO">

    <insert id="create" parameterType="com.bookinator.api.model.Book"
            useGeneratedKeys='true' keyProperty='id' keyColumn="id">
        INSERT INTO books(owner_id, holding_type_id, status_id, name,
                          authors, year_published, field_id, topics, description)
        VALUES(#{ownerId}, #{holdingTypeId}, #{statusId}, #{name},
               #{authors}, #{yearPublished}, #{fieldId}, #{topics}, #{description});
    </insert>

    <!-- for testing purposes only -->
    <select id="getBookById" parameterType="int" resultMap="BookMap">
        SELECT * FROM books WHERE id = #{id};
    </select>

    <update id="update" parameterType="com.bookinator.api.model.Book">
        update books
        set name = #{name}, holding_type_id = #{holdingTypeId}, status_id = #{statusId},
            authors = #{authors}, topics = #{topics}, description = #{description},
            year_published = #{yearPublished}, field_id = #{fieldId}
        where id = #{id};
    </update>

    <delete id="delete" parameterType="int">
        delete from books WHERE id = #{id};
    </delete>

    <select id="filterBooks" parameterType="com.bookinator.api.model.dto.ExploreRequest"
            resultMap="BookDtoMap">
        select b.id, b.owner_id, b.name, coalesce(b.authors, '') as authors, coalesce(b.topics, '') as topics,
            coalesce(b.description, '') as description, coalesce(cast(b.year_published as varchar), '') as year_published,
            bht.name as holding_type, bst.name as status, f.name as field, c.name as city,
            round(avg(coalesce(r.score, 0)), 2) as owner_avg_rating
        from books b
            left join book_holding_types bht on b.holding_type_id = bht.id
            left join book_status_types bst on b.status_id = bst.id
            left join fields f on b.field_id = f.id
            left join users u on b.owner_id = u.id
            left join cities c on u.city_id = c.id
            left join reviews r on r.reviewee_id = u.id
        <if test="name != null or author != null or
                   topic != null or yearPublished != 0
                    or fieldId != 0 or cityId != 0 ">
            where
            <if test="name != null">
                lower(b.name) LIKE '%' || lower(#{name}) || '%'
            </if>
            <if test="author != null">
                <if test="name != null"> AND </if>
                lower(authors) LIKE '%' || lower(#{author}) || '%'
            </if>
            <if test="topic != null">
                <if test="name != null or author != null"> AND </if>
                lower(topics) LIKE '%' || lower(#{topic}) || '%'
            </if>
            <if test="yearPublished != 0">
                <if test="name != null or author != null or topic != null"> AND </if>
                year_published = #{yearPublished}
            </if>
            <if test="fieldId != 0">
                <if test="name != null or author != null or topic != null or yearPublished != 0"> AND </if>
                f.id = #{fieldId}
            </if>
            <if test="cityId != 0">
                <if test="name != null or author != null or topic != null or yearPublished != 0 or fieldId != 0"> AND </if>
                c.id = #{cityId}
            </if>
        </if>
        group by
            b.id, b.owner_id, b.name, b.authors, b.topics, b.description,
            b.year_published, holding_type, status, field, city
        order by b.name asc, owner_avg_rating desc
    </select>

    <select id="getUserBooks" parameterType="int" resultMap="BookDto2Map">
        select b.id, b.owner_id, b.name, coalesce(b.authors, '') as authors, coalesce(b.topics, '') as topics,
               coalesce(b.description, '') as description, coalesce(cast(b.year_published as varchar), '') as year_published,
               bht.name as holding_type, bst.name as status, f.name as field
        from users u, books b
            left join book_holding_types bht on b.holding_type_id = bht.id
            left join book_status_types bst on b.status_id = bst.id
            left join fields f on b.field_id = f.id
        where b.owner_id = u.id and u.id = #{id}
        order by b.name asc
    </select>

    <select id="getBookDTO" parameterType="int" resultMap="BookDto2Map">
        select b.id, b.owner_id, b.name, coalesce(b.authors, '') as authors, coalesce(b.topics, '') as topics,
        coalesce(b.description, '') as description, coalesce(cast(b.year_published as varchar), '') as year_published,
        bht.name as holding_type, bst.name as status, f.name as field
        from books b
        left join book_holding_types bht on b.holding_type_id = bht.id
        left join book_status_types bst on b.status_id = bst.id
        left join fields f on b.field_id = f.id
        where b.id = #{id}
    </select>

    <select id="getBookOwnerId" parameterType="int" resultType="int">
        select owner_id from books where id = #{id};
    </select>

    <resultMap id="BookMap" type="com.bookinator.api.model.Book">
        <result property="id" column="id"/>
        <result property="ownerId" column="owner_id"/>
        <result property="holdingTypeId" column="holding_type_id"/>
        <result property="statusId" column="status_id"/>
        <result property="authors" column="authors"/>
        <result property="yearPublished" column="year_published"/>
        <result property="fieldId" column="field_id"/>
        <result property="topics" column="topics"/>
        <result property="description" column="description"/>
    </resultMap>

    <resultMap id="BookDtoMap" type="com.bookinator.api.model.dto.ExploreResponse">
        <result property="id" column="id"/>
        <result property="ownerId" column="owner_id"/>
        <result property="ownerAvgRating" column="owner_avg_rating"/>
        <result property="holdingType" column="holding_type"/>
        <result property="status" column="status"/>
        <result property="authors" column="authors"/>
        <result property="city" column="city"/>
        <result property="yearPublished" column="year_published"/>
        <result property="field" column="field"/>
        <result property="topics" column="topics"/>
        <result property="description" column="description"/>
    </resultMap>

    <resultMap id="BookDto2Map" type="com.bookinator.api.model.dto.Book">
        <result property="id" column="id"/>
        <result property="ownerId" column="owner_id"/>
        <result property="holdingType" column="holding_type"/>
        <result property="status" column="status"/>
        <result property="authors" column="authors"/>
        <result property="yearPublished" column="year_published"/>
        <result property="field" column="field"/>
        <result property="topics" column="topics"/>
        <result property="description" column="description"/>
    </resultMap>
</mapper>